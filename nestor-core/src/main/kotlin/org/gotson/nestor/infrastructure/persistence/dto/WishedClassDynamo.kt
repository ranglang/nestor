package org.gotson.nestor.infrastructure.persistence.dto

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted
import org.gotson.nestor.domain.model.WishedClass
import org.gotson.nestor.infrastructure.persistence.converter.DayOfWeekConverter
import org.gotson.nestor.infrastructure.persistence.converter.LocalTimeConverter
import java.time.DayOfWeek
import java.time.LocalTime

@DynamoDBTable(tableName = "nestor_wished_class")
data class WishedClassDynamo(
        @DynamoDBHashKey
        @DynamoDBAutoGeneratedKey
        var id: String? = null,

        @DynamoDBAttribute
        var membershipId: String? = null,

        @DynamoDBAttribute
        @DynamoDBTypeConverted(converter = LocalTimeConverter::class)
        var time: LocalTime? = null,

        @DynamoDBAttribute
        @DynamoDBTypeConverted(converter = DayOfWeekConverter::class)
        var day: DayOfWeek? = null,

        @DynamoDBAttribute
        var location: String? = null,

        @DynamoDBAttribute
        var type: String? = null
) {


    companion object {
        fun from(wishedClass: WishedClass): WishedClassDynamo =
                WishedClassDynamo(
                        wishedClass.id,
                        wishedClass.membership.id,
                        wishedClass.time,
                        wishedClass.day,
                        wishedClass.location,
                        wishedClass.type
                )
    }
}